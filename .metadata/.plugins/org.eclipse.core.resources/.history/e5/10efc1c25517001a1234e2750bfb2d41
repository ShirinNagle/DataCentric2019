package com.shops;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;




public class DAO {

	private DataSource mysqlDS;
	
	private Connection myConn = null;
	private Statement myStmt = null;
	private ResultSet myRs = null;


	
	/* ======================================================================================================
	 * Constructor
	 * ====================================================================================================== */
	public DAO() throws Exception {
		Context context = new InitialContext();
		String jndiName = "java:comp/env/shops";
		mysqlDS = (DataSource) context.lookup(jndiName);
	}

	//method to retrieve stores and store them in an array list called stores
	public ArrayList<Store> loadStores() throws SQLException {
		
		//Connection myConn = null;
		//Statement myStmt = null;
		//ResultSet myRs = null;
		
		myConn = mysqlDS.getConnection();

		String sql = "select * from store";

		myStmt = myConn.createStatement();

		myRs = myStmt.executeQuery(sql);
		
		ArrayList<Store> stores = new ArrayList<Store>();
		
		
		// process result set
				while (myRs.next()) {
					Store s = new Store();
					
					s.setStoreId(myRs.getInt("id"));
				
					s.setStoreName(myRs.getString("name"));
					
					s.setFounded(myRs.getString("founded"));
					
					stores.add(s);
					//System.out.println(myRs.getString("PRODID"));
				}	
		
		return stores;
	}

	//method to retrieve the list of products and add them to an array list called products
	public ArrayList<Product> loadProducts() throws SQLException {
		
		myConn = mysqlDS.getConnection();

		String sql = "select * from product";

		myStmt = myConn.createStatement();

		myRs = myStmt.executeQuery(sql);
		
		ArrayList<Product> products = new ArrayList<Product>();
		// process result set
		while (myRs.next()) {
			Product p = new Product();
			
			p.setStoreId(myRs.getInt("storeId"));
			
			p.setProdId(myRs.getInt("prodId"));
		
			p.setProdName(myRs.getString("prodName"));
			
			p.setPrice(myRs.getFloat("price"));
			
			products.add(p);
			//System.out.println(myRs.getString("PRODID"));
		}
		return products;	
		
		
	}

}
